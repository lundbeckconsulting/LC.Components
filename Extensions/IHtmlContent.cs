/*
    @Date			 : 14.07.2020
    @Author			 : Stein Lundbeck
*/

using Microsoft.AspNetCore.Html;
using System.IO;
using System.Text.Encodings.Web;
using System.Web;

namespace LundbeckConsulting.Components.Extensions
{
    public static class IHtmlContentExtensions
    {
        /// <summary>
        /// HTML generated by IHtmlContent object
        /// </summary>
        /// <param name="encode">When false string is Html decoded. Default is false</param>
        /// <returns>The generated HTML based on IHtmlContent</returns>
        public static string ToStringValue(this IHtmlContent content, bool encode = false)
        {
            string result = default;

            using (StringWriter sw = new StringWriter())
            {
                content.WriteTo(sw, HtmlEncoder.Default);

                result = sw.ToString();
            }

            if (!encode)
            {
                result = HttpUtility.HtmlDecode(result);
            }

            return result;
        }

        /// <summary>
        /// Returns content element wrapped in a HtmlString element
        /// </summary>
        /// <returns>HtmlString containing content element</returns>
        public static HtmlString ToHtmlString(this IHtmlContent content, bool encode = false) => new HtmlString(content.ToStringValue(encode));
    }
}
